plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.wizeline'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

apply plugin: 'jacoco'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'//No usar
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation group: 'org.json', name: 'json', version: '20220320'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.3'
	implementation group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.72'

	implementation 'javax.validation:validation-api:2.0.1.Final'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.4'

	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'


	implementation 'org.springframework.kafka:spring-kafka:2.9.2'

	testImplementation 'org.springframework.kafka:spring-kafka-test:2.9.2'

	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.5'

	implementation group: 'com.github.vladimir-bukhtoyarov', name: 'bucket4j-core', version: '7.6.0'



}

jacoco {
	toolVersion = "0.8.8"
}

sonarqube {
	properties {
		property "sonar.projectKey", "davidhinostrozalo"
		property "sonar.organization", "davidhinostrozalo"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	println 'entregabledavid'
	useJUnitPlatform()
	dependsOn 'cleanTest'
	testLogging{
		events "skipped", "passed", "failed"
	}
	finalizedBy 'jacocoTestReport'
}
jacocoTestReport {
	dependsOn test
	reports{
		xml.required = true
	}
}