plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.5.0.2730"
}

group = 'com.wizeline.gradle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

apply plugin: 'jacoco'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.json:json:20220924'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
	implementation group: 'io.github.openfeign', name: 'feign-okhttp', version: '11.10'
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
	implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
	implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
	implementation group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '1.72'
	implementation group: 'com.github.vladimir-bukhtoyarov', name: 'bucket4j-core', version: '7.6.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.8"
}
test {
    useJUnitPlatform()
    dependsOn 'cleanTest'
    testLogging{
        events "skipped", "passed", "failed"
    }
    finalizedBy 'jacocoTestReport'
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    //finalizedBy 'sonarqube'
    reports{
        xml.required = true
    }
}

sonarqube {
	properties {
		property "sonar.projectKey", "AgnosticSix_learningjavagradle"
		property "sonar.organization", "agnosticsix"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
